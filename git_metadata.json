{"package":"Github","tagline":"Github Package","image":"","description":"","repo":"","blocks":[{"github":{"section":"activity","name":"checkNotificationThreadSubscription"},"url":"/notifications/threads/:id/subscription","method":"GET","name":"checkNotificationThreadSubscription","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"checkStarringRepo"},"url":"/user/starred/:user/:repo","method":"GET","name":"checkRepositoryStarring","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"deleteNotificationThreadSubscription"},"url":"/notifications/threads/:id/subscription","method":"DELETE","name":"deleteNotificationThreadSubscription","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getEvents"},"url":"/events","method":"GET","name":"getPublicEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getEventsForOrg"},"url":"/orgs/:org/events","method":"GET","name":"getOrganizationEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getEventsForRepo"},"url":"/repos/:user/:repo/events","method":"GET","name":"getRepositoryEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getEventsForRepoIssues"},"url":"/repos/:user/:repo/issues/events","method":"GET","name":"getRepositoryIssuesEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getEventsForRepoNetwork"},"url":"/networks/:user/:repo/events","method":"GET","name":"getRepositoryNetworkEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getEventsForUser"},"url":"/users/:user/events","method":"GET","name":"getUserPerformedEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getEventsForUserOrg"},"url":"/users/:user/events/orgs/:org","method":"GET","name":"getUserOrganizationEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getEventsForUserPublic"},"url":"/users/:user/events/public","method":"GET","name":"getUserPublicPerformedEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getEventsReceived"},"url":"/users/:user/received_events","method":"GET","name":"getUserReceivedEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getEventsReceivedPublic"},"url":"/users/:user/received_events/public","method":"GET","name":"getUserReceivedPublicEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getFeeds"},"url":"/feeds","method":"GET","name":"getFeeds","callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getNotificationThread"},"url":"/notifications/threads/:id","method":"GET","name":"getNotificationThread","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getNotifications"},"url":"/notifications","method":"GET","name":"getUserNotifications","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"all","type":"Boolean","info":"If true, show notifications marked as read. Default: false (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"participating","type":"Boolean","info":"If true, only shows notifications in which the user is directly participating or mentioned. Default: false (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"before","type":"String","info":"Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getNotificationsForUser"},"url":"/repos/:user/:repo/notifications","method":"GET","name":"getUserRepositoryNotifications","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"all","type":"Boolean","info":"If true, show notifications marked as read. Default: false (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"participating","type":"Boolean","info":"If true, only shows notifications in which the user is directly participating or mentioned. Default: false (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"before","type":"String","info":"Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getRepoSubscription"},"url":"/repos/:user/:repo/subscription","method":"GET","name":"getRepositorySubscription","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getStargazersForRepo"},"url":"/repos/:user/:repo/stargazers","method":"GET","name":"getRepositoryStargazers","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getStarredRepos"},"url":"/user/starred","method":"GET","name":"getStarredRepositories","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getStarredReposForUser"},"url":"/users/:user/starred","method":"GET","name":"getUserStarredRepositories","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getWatchedRepos"},"url":"/user/subscriptions","method":"GET","name":"getWatchedRepositories","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getWatchedReposForUser"},"url":"/users/:user/subscriptions","method":"GET","name":"getUserWatchedRepositories","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"getWatchersForRepo"},"url":"/repos/:user/:repo/subscribers","method":"GET","name":"getRepositoryWatchers","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"markNotificationThreadAsRead"},"url":"/notifications/threads/:id","method":"PATCH","name":"markNotificationThreadAsRead","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"markNotificationsAsRead"},"url":"/notifications","method":"PUT","name":"markNotificationsAsRead","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"lastReadAt","type":"String","info":"Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"markNotificationsAsReadForRepo"},"url":"/repos/:user/:repo/notifications","method":"PUT","name":"markNotificationsAsReadForRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"lastReadAt","type":"String","info":"Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"setNotificationThreadSubscription"},"url":"/notifications/threads/:id/subscription","method":"PUT","name":"setNotificationThreadSubscription","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"subscribed","type":"Boolean","info":"Determines if notifications should be received from this thread (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ignored","type":"Boolean","info":"Determines if all notifications should be blocked from this thread (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"setRepoSubscription"},"url":"/repos/:user/:repo/subscription","method":"PUT","name":"setRepositorySubscription","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"subscribed","type":"Boolean","info":"Determines if notifications should be received from this repository. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ignored","type":"Boolean","info":"Determines if all notifications should be blocked from this repository. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"starRepo"},"url":"/user/starred/:user/:repo","method":"PUT","name":"starRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"unstarRepo"},"url":"/user/starred/:user/:repo","method":"DELETE","name":"unstarRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"activity","name":"unwatchRepo"},"url":"/repos/:user/:repo/subscription","method":"DELETE","name":"unwatchRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"check"},"url":"/applications/:client_id/tokens/:access_token","method":"GET","name":"checkAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"clientId","type":"String","info":"The 20 character OAuth app client key for which to create the token. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"accessToken","type":"String","info":"OAuth token (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"create"},"url":"/authorizations","method":"POST","name":"createAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"scopes","type":"Array","info":"A list of scopes that this authorization is in. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"note","type":"String","info":"A note to remind you what the OAuth token is for. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"noteUrl","type":"String","info":"A URL to remind you what app the OAuth token is for. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"clientId","type":"String","info":"The 20 character OAuth app client key for which to create the token. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"clientSecret","type":"String","info":"The 40 character OAuth app client secret for which to create the token. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"fingerprint","type":"String","info":"A unique string to distinguish an authorization from others created for the same client ID and user. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"delete"},"url":"/authorizations/:id","method":"DELETE","name":"deleteAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"deleteGrant"},"url":"/applications/grants/:id","method":"DELETE","name":"deleteGrantAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"get"},"url":"/authorizations/:id","method":"GET","name":"getAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"getAll"},"url":"/authorizations","method":"GET","name":"getAllAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"getGrant"},"url":"/applications/grants/:id","method":"GET","name":"getGrantAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"getGrants"},"url":"/applications/grants","method":"GET","name":"getGrantsAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"getOrCreateAuthorizationForApp"},"url":"/authorizations/clients/:client_id","method":"PUT","name":"getOrCreateAuthorizationForAppAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"clientId","type":"String","info":"The 20 character OAuth app client key for which to create the token. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"clientSecret","type":"String","info":"The 40 character OAuth app client secret associated with the client ID specified in the URL. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"scopes","type":"Array","info":"A list of scopes that this authorization is in. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"note","type":"String","info":"A note to remind you what the OAuth token is for. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"noteUrl","type":"String","info":"A URL to remind you what app the OAuth token is for. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"fingerprint","type":"String","info":"A unique string to distinguish an authorization from others created for the same client ID and user. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"getOrCreateAuthorizationForAppAndFingerprint"},"url":"/authorizations/clients/:client_id/:fingerprint","method":"PUT","name":"getOrCreateAuthorizationForAppAndFingerprintAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"clientId","type":"String","info":"The 20 character OAuth app client key for which to create the token. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"fingerprint","type":"String","info":"A unique string to distinguish an authorization from others created for the same client ID and user. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"clientSecret","type":"String","info":"The 40 character OAuth app client secret associated with the client ID specified in the URL. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"scopes","type":"Array","info":"A list of scopes that this authorization is in. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"note","type":"String","info":"A note to remind you what the OAuth token is for. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"noteUrl","type":"String","info":"A URL to remind you what app the OAuth token is for. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"reset"},"url":"/applications/:client_id/tokens/:access_token","method":"POST","name":"resetAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"clientId","type":"String","info":"The 20 character OAuth app client key for which to create the token. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"accessToken","type":"String","info":"OAuth token (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"revoke"},"url":"/applications/:client_id/tokens/:access_token","method":"DELETE","name":"revokeAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"clientId","type":"String","info":"The 20 character OAuth app client key for which to create the token. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"accessToken","type":"String","info":"OAuth token (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"authorization","name":"update"},"url":"/authorizations/:id","method":"PATCH","name":"updateAuthorization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"scopes","type":"Array","info":"A list of scopes that this authorization is in. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"addScopes","type":"Array","info":"A list of scopes to add to this authorization. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"removeScopes","type":"Array","info":"A list of scopes to remove from this authorization. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"note","type":"String","info":"A note to remind you what the OAuth token is for. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"noteUrl","type":"String","info":"A URL to remind you what app the OAuth token is for. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"enterprise","name":"createOrg"},"url":"/admin/organizations","method":"POST","name":"createOrganizationEnterprise","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"login","type":"String","info":"The organization's username. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"admin","type":"String","info":"The login of the user who will manage this organization. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"profileName","type":"String","info":"The organization's display name. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"enterprise","name":"getLicense"},"url":"/enterprise/settings/license","method":"GET","name":"getLicenseEnterprise","callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"enterprise","name":"queueIndexingJob"},"url":"/staff/indexing_jobs","method":"POST","name":"queueIndexingJobEnterprise","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"target","type":"String","info":"A string representing the item to index. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"enterprise","name":"stats"},"url":"/enterprise/stats/:type","method":"GET","name":"statsEnterprise","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"type","type":"String","info":"Possible values: issues, hooks, milestones, orgs, comments, pages, users, gists, pulls, repos, all. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"enterprise","name":"syncLdapForTeam"},"url":"/admin/ldap/teams/:team_id/sync","method":"POST","name":"syncLdapForTeamEnterprise","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"teamId","type":"Number","info":" (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"enterprise","name":"syncLdapForUser"},"url":"/admin/ldap/users/:user/sync","method":"POST","name":"syncLdapForUserEnterprise","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"enterprise","name":"updateLdapForTeam"},"url":"/admin/ldap/teams/:team_id/mapping","method":"PATCH","name":"updateLdapForTeamEnterprise","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"teamId","type":"Number","info":" (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"enterprise","name":"updateLdapForUser"},"url":"/admin/ldap/users/:user/mapping","method":"PATCH","name":"updateLdapForUserEnterprise","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"checkStar"},"url":"/gists/:id/star","method":"GET","name":"checkGistStar","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"create"},"url":"/gists","method":"POST","name":"createGist","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"files","type":"Json","info":"Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content' (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"public","type":"Boolean","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"createComment"},"url":"/gists/:gist_id/comments","method":"POST","name":"createGistComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"gistId","type":"String","info":"Id (SHA1 hash) of the gist. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"delete"},"url":"/gists/:id","method":"DELETE","name":"deleteGist","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"deleteComment"},"url":"/gists/:gist_id/comments/:id","method":"DELETE","name":"deleteGistComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"gistId","type":"String","info":"Id (SHA1 hash) of the gist. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"edit"},"url":"/gists/:id","method":"PATCH","name":"editGist","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"files","type":"Json","info":"Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content' (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"editComment"},"url":"/gists/:gist_id/comments/:id","method":"PATCH","name":"updateGistComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"gistId","type":"String","info":"Id (SHA1 hash) of the gist. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"fork"},"url":"/gists/:id/forks","method":"POST","name":"forkGist","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"get"},"url":"/gists/:id","method":"GET","name":"getGist","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"getAll"},"url":"/gists","method":"GET","name":"getAllGists","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"getComment"},"url":"/gists/:gist_id/comments/:id","method":"GET","name":"getGistComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"gistId","type":"String","info":"Id (SHA1 hash) of the gist. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"getComments"},"url":"/gists/:gist_id/comments","method":"GET","name":"getGistComments","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"gistId","type":"String","info":"Id (SHA1 hash) of the gist. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"getCommits"},"url":"/gists/:id/commits","method":"GET","name":"getGistCommits","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"getForUser"},"url":"/users/:user/gists","method":"GET","name":"getUserGists","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"getForks"},"url":"/gists/:id/forks","method":"GET","name":"getGistForks","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"getPublic"},"url":"/gists/public","method":"GET","name":"getPublicGists","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"getRevision"},"url":"/gists/:id/:sha","method":"GET","name":"getGistByRevision","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"getStarred"},"url":"/gists/starred","method":"GET","name":"getStarredGists","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"star"},"url":"/gists/:id/star","method":"PUT","name":"starGist","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gists","name":"unstar"},"url":"/gists/:id/star","method":"DELETE","name":"unstarGist","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"createBlob"},"url":"/repos/:user/:repo/git/blobs","method":"POST","name":"createBlob","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"encoding","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"createCommit"},"url":"/repos/:user/:repo/git/commits","method":"POST","name":"createCommit","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"message","type":"String","info":"String of the commit message (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"tree","type":"String","info":"String of the SHA of the tree object this commit points to (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"parents","type":"Array","info":"Array of the SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided, for a merge commit, an array of more than one should be provided. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"author","type":"Json","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"committer","type":"Json","info":" (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"createReference"},"url":"/repos/:user/:repo/git/refs","method":"POST","name":"createReference","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ref","type":"String","info":"String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"createTag"},"url":"/repos/:user/:repo/git/tags","method":"POST","name":"createTag","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"tag","type":"String","info":"String of the tag (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"message","type":"String","info":"String of the tag message (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"object","type":"String","info":"String of the SHA of the git object this is tagging (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"type","type":"String","info":"String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"tagger","type":"Json","info":"JSON object that contains the following keys: `name` - String of the name of the author of the tag, `email` - String of the email of the author of the tag, `date` - Timestamp of when this object was tagged (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"createTree"},"url":"/repos/:user/:repo/git/trees","method":"POST","name":"createTree","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"tree","type":"Json","info":"Array of Hash objects (of path, mode, type and sha) specifying a tree structure (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"baseTree","type":"String","info":"String of the SHA1 of the tree you want to update with new data (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"deleteReference"},"url":"/repos/:user/:repo/git/refs/:ref","method":"DELETE","name":"deleteReference","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ref","type":"String","info":"String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"getBlob"},"url":"/repos/:user/:repo/git/blobs/:sha","method":"GET","name":"getBlob","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"getCommit"},"url":"/repos/:user/:repo/git/commits/:sha","method":"GET","name":"getCommit","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"getCommitSignatureVerification"},"url":"/repos/:user/:repo/git/commits/:sha","method":"GET","name":"getCommitSignatureVerification","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"getReference"},"url":"/repos/:user/:repo/git/refs/:ref","method":"GET","name":"getReference","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ref","type":"String","info":"String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"getReferences"},"url":"/repos/:user/:repo/git/refs","method":"GET","name":"getReferences","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"getTag"},"url":"/repos/:user/:repo/git/tags/:sha","method":"GET","name":"getTag","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"getTagSignatureVerification"},"url":"/repos/:user/:repo/git/tags/:sha","method":"GET","name":"getTagSignatureVerification","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"getTags"},"url":"/repos/:user/:repo/git/refs/tags","method":"GET","name":"getTags","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"getTree"},"url":"/repos/:user/:repo/git/trees/:sha","method":"GET","name":"getTree","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"recursive","type":"Boolean","info":" (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"gitdata","name":"updateReference"},"url":"/repos/:user/:repo/git/refs/:ref","method":"PATCH","name":"updateReference","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ref","type":"String","info":"String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"force","type":"Boolean","info":"Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure you’re not overwriting work. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"installations","name":"create"},"url":"/installations/:installation_id/access_tokens","method":"POST","name":"createInstallation","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"installationId","type":"Number","info":"The id of the installation for this integration. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"userId","type":"Number","info":"The id of the user for whom the integration is acting on behalf of. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"addAssigneesToIssue"},"url":"/repos/:user/:repo/issues/:number/assignees","method":"POST","name":"addAssigneesToIssue","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"assignees","type":"Array","info":"Logins for the users that should be added to the issue. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"addLabels"},"url":"/repos/:user/:repo/issues/:number/labels","method":"POST","name":"addIssueLabels","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Array","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"checkAssignee"},"url":"/repos/:user/:repo/assignees/:assignee","method":"GET","name":"checkAssignee","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"assignee","type":"String","info":"Login for the user that this issue should be assigned to. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"create"},"url":"/repos/:user/:repo/issues","method":"POST","name":"createIssue","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"title","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"assignee","type":"String","info":"Login for the user that this issue should be assigned to. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"milestone","type":"Number","info":"Milestone to associate this issue with. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"labels","type":"Json","info":"Array of strings - Labels to associate with this issue. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"assignees","type":"Array","info":"Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"createComment"},"url":"/repos/:user/:repo/issues/:number/comments","method":"POST","name":"createIssueComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"createLabel"},"url":"/repos/:user/:repo/labels","method":"POST","name":"createLabel","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"color","type":"String","info":"6 character hex code, without a leading #. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"createMilestone"},"url":"/repos/:user/:repo/milestones","method":"POST","name":"createMilestone","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"title","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"dueOn","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"deleteComment"},"url":"/repos/:user/:repo/issues/comments/:id","method":"DELETE","name":"deleteIssueComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"deleteLabel"},"url":"/repos/:user/:repo/labels/:name","method":"DELETE","name":"deleteLabel","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"deleteMilestone"},"url":"/repos/:user/:repo/milestones/:number","method":"DELETE","name":"deleteMilestone","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"edit"},"url":"/repos/:user/:repo/issues/:number","method":"PATCH","name":"updateIssue","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"title","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"assignee","type":"String","info":"Login for the user that this issue should be assigned to. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":"open or closed (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"milestone","type":"Number","info":"Milestone to associate this issue with. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"labels","type":"Json","info":"Array of strings - Labels to associate with this issue. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"assignees","type":"Array","info":"Logins for Users to assign to this issue. Pass one or more user logins to replace the set of assignees on this Issue. .Send an empty array ([]) to clear all assignees from the Issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"editComment"},"url":"/repos/:user/:repo/issues/comments/:id","method":"PATCH","name":"updateIssueComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"get"},"url":"/repos/:user/:repo/issues/:number","method":"GET","name":"getIssue","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getAll"},"url":"/issues","method":"GET","name":"getAllIssues","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"filter","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":"open, closed, or all (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"labels","type":"String","info":"String list of comma separated Label names. Example: bug,ui,@high (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"direction","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getAssignees"},"url":"/repos/:user/:repo/assignees","method":"GET","name":"getAssignees","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getComment"},"url":"/repos/:user/:repo/issues/comments/:id","method":"GET","name":"getIssueComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getComments"},"url":"/repos/:user/:repo/issues/:number/comments","method":"GET","name":"getIssueComments","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getCommentsForRepo"},"url":"/repos/:user/:repo/issues/comments","method":"GET","name":"getIssuesCommentsForRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"direction","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getEvent"},"url":"/repos/:user/:repo/issues/events/:id","method":"GET","name":"getIssueEvent","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getEvents"},"url":"/repos/:user/:repo/issues/:number/events","method":"GET","name":"getIssueEvents","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getEventsForRepo"},"url":"/repos/:user/:repo/issues/events","method":"GET","name":"getIssueEventsForRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getEventsTimeline"},"url":"/repos/:user/:repo/issues/:number/timeline","method":"GET","name":"getIssueEventsTimeline","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getForOrg"},"url":"/orgs/:org/issues","method":"GET","name":"getIssuesForOrganization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"filter","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":"open, closed, or all (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"labels","type":"String","info":"String list of comma separated Label names. Example: bug,ui,@high (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"direction","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getForRepo"},"url":"/repos/:user/:repo/issues","method":"GET","name":"getIssuesForRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"milestone","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":"open, closed, or all (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"assignee","type":"String","info":"String User login, `none` for Issues with no assigned User. `*` for Issues with any assigned User. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"creator","type":"String","info":"The user that created the issue. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"mentioned","type":"String","info":"String User login. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"labels","type":"String","info":"String list of comma separated Label names. Example: bug,ui,@high (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"direction","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getForUser"},"url":"/user/issues","method":"GET","name":"getUserIssues","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"filter","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":"open, closed, or all (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"labels","type":"String","info":"String list of comma separated Label names. Example: bug,ui,@high (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"direction","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getIssueLabels"},"url":"/repos/:user/:repo/issues/:number/labels","method":"GET","name":"getIssueLabels","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getLabel"},"url":"/repos/:user/:repo/labels/:name","method":"GET","name":"getLabel","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getLabels"},"url":"/repos/:user/:repo/labels","method":"GET","name":"getRepositoryLabels","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getMilestone"},"url":"/repos/:user/:repo/milestones/:number","method":"GET","name":"getMilestone","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getMilestoneLabels"},"url":"/repos/:user/:repo/milestones/:number/labels","method":"GET","name":"getMilestoneLabels","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"getMilestones"},"url":"/repos/:user/:repo/milestones","method":"GET","name":"getRepositoryMilestones","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":"due_on, completeness, default: due_on (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"direction","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"lock"},"url":"/repos/:user/:repo/issues/:number/lock","method":"PUT","name":"lockIssue","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"removeAllLabels"},"url":"/repos/:user/:repo/issues/:number/labels","method":"DELETE","name":"removeIssueAllLabels","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"removeAssigneesFromIssue"},"url":"/repos/:user/:repo/issues/:number/assignees","method":"DELETE","name":"removeAssigneesFromIssue","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"assignees","type":"Array","info":"Logins for the users that should be removed from the issue. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"removeLabel"},"url":"/repos/:user/:repo/issues/:number/labels/:name","method":"DELETE","name":"removeIssueLabel","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"replaceAllLabels"},"url":"/repos/:user/:repo/issues/:number/labels","method":"PUT","name":"replaceAllIssueLabels","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Array","info":"Sending an empty array ([]) will remove all Labels from the Issue. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"unlock"},"url":"/repos/:user/:repo/issues/:number/lock","method":"DELETE","name":"unlockIssue","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"updateLabel"},"url":"/repos/:user/:repo/labels/:oldname","method":"PATCH","name":"updateLabel","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"oldname","type":"String","info":"The old name of the label. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":"The new name of the label. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"color","type":"String","info":"6 character hex code, without a leading #. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"issues","name":"updateMilestone"},"url":"/repos/:user/:repo/milestones/:number","method":"PATCH","name":"updateMilestone","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"title","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"dueOn","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"cancelImport"},"url":"/repos/:user/:repo/import","method":"DELETE","name":"cancelImport","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"deleteMigrationArchive"},"url":"/orgs/:org/migrations/:id/archive","method":"DELETE","name":"deleteMigrationArchive","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"getImportCommitAuthors"},"url":"/repos/:user/:repo/import/authors","method":"GET","name":"getImportCommitAuthors","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"String","info":"Only authors found after this id are returned. Provide the highest author ID you've seen so far. New authors may be added to the list at any point while the importer is performing the raw step. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"getImportProgress"},"url":"/repos/:user/:repo/import","method":"GET","name":"getImportProgress","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"getLargeImportFiles"},"url":"/:user/:name/import/large_files","method":"GET","name":"getLargeImportFiles","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"getMigrationArchiveLink"},"url":"/orgs/:org/migrations/:id/archive","method":"GET","name":"getMigrationArchiveLink","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"getMigrationStatus"},"url":"/orgs/:org/migrations/:id","method":"GET","name":"getMigrationStatus","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"getMigrations"},"url":"/orgs/:org/migrations","method":"GET","name":"getMigrations","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"mapImportCommitAuthor"},"url":"/repos/:user/:repo/import/authors/:author_id","method":"PATCH","name":"mapImportCommitAuthor","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"authorId","type":"String","info":"The commit author id. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"email","type":"String","info":"The new Git author email. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":"The new Git author name. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"setImportLfsPreference"},"url":"/:user/:name/import/lfs","method":"PATCH","name":"setImportLfsPreference","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"startImport"},"url":"/repos/:user/:repo/import","method":"PUT","name":"startImport","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"vcsUrl","type":"String","info":"The URL of the originating repository. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"vcs","type":"String","info":"The originating VCS type. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"vcsUsername","type":"String","info":"If authentication is required, the username to provide to vcs_url. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"vcsPassword","type":"String","info":"If authentication is required, the password to provide to vcs_url. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"tfvcProject","type":"String","info":"For a tfvc import, the name of the project that is being imported. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"startMigration"},"url":"/orgs/:org/migrations","method":"POST","name":"startMigration","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repositories","type":"Array","info":"A list of arrays indicating which repositories should be migrated. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"lockRepositories","type":"Boolean","info":"Indicates whether repositories should be locked (to prevent manipulation) while migrating data. Default: false. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"excludeAttachments","type":"Boolean","info":"Indicates whether attachments should be excluded from the migration (to reduce migration archive file size). Default: false. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"unlockRepoLockedForMigration"},"url":"/orgs/:org/migrations/:id/repos/:repo/lock","method":"DELETE","name":"unlockRepositoryLockedForMigration","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"migrations","name":"updateImport"},"url":"/repos/:user/:repo/import","method":"PATCH","name":"updateImport","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"misc","name":"getEmojis"},"url":"/emojis","method":"GET","name":"getEmojis","callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"misc","name":"getGitignoreTemplate"},"url":"/gitignore/templates/:name","method":"GET","name":"getGitignoreTemplate","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":"The name of the .gitignore template to get e.g. 'C' (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"misc","name":"getGitignoreTemplates"},"url":"/gitignore/templates","method":"GET","name":"getGitignoreTemplates","callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"misc","name":"getLicense"},"url":"/licenses/:license","method":"GET","name":"getLicense","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"license","type":"String","info":"Ex: /licenses/mit (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"misc","name":"getLicenses"},"url":"/licenses","method":"GET","name":"getLicenses","callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"misc","name":"getMeta"},"url":"/meta","method":"GET","name":"getMeta","callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"misc","name":"getRateLimit"},"url":"/rate_limit","method":"GET","name":"getRateLimit","callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"misc","name":"getRepoLicense"},"url":"/repos/:user/:repo/license","method":"GET","name":"getRepoLicenseMisc","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"misc","name":"renderMarkdown"},"url":"/markdown","method":"POST","name":"renderMarkdown","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"text","type":"String","info":"The Markdown text to render (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"mode","type":"String","info":"The rendering mode, `markdown` to render a document as plain Markdown, just like README files are rendered. `gfm` to render a document as user-content, e.g. like user comments or issues are rendered. In GFM mode, hard line breaks are always taken into account, and issue and user mentions are linked accordingly. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"context","type":"String","info":"The repository context. Only taken into account when rendering as `gfm` (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"misc","name":"renderMarkdownRaw"},"url":"/markdown/raw","method":"POST","name":"renderMarkdownRaw","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"data","type":"String","info":"Raw data to send as the body of the request (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"addOrganizationMembership"},"url":"/orgs/:org/memberships/:user","method":"PUT","name":"addOrganizationMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"role","type":"String","info":"The role to give the user in the organization. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"addTeamMembership"},"url":"/teams/:id/memberships/:user","method":"PUT","name":"addOrganizationTeamMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"role","type":"String","info":"The role that this user should have in the team. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"addTeamRepo"},"url":"/teams/:id/repos/:org/:repo","method":"PUT","name":"addOrganizationTeamRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"permission","type":"String","info":"`pull` - team members can pull, but not push or administer this repository, `push` - team members can pull and push, but not administer this repository, `admin` - team members can pull, push and administer this repository. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"checkMembership"},"url":"/orgs/:org/members/:user","method":"GET","name":"checkOrganizationMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"checkPublicMembership"},"url":"/orgs/:org/public_members/:user","method":"GET","name":"checkOrganizationPublicMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"checkTeamRepo"},"url":"/teams/:id/repos/:user/:repo","method":"GET","name":"checkOrganizationTeamRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"concealMembership"},"url":"/orgs/:org/public_members/:user","method":"DELETE","name":"cancelOrganizationMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"createHook"},"url":"/orgs/:org/hooks","method":"POST","name":"createOrganizationHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":"Must be passed as \"web\". (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"config","type":"Json","info":"Key/value pairs to provide settings for this webhook (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"events","type":"Array","info":"Determines what events the hook is triggered for. Default: [\"push\"]. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"active","type":"Boolean","info":"Determines whether the hook is actually triggered on pushes. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"createTeam"},"url":"/orgs/:org/teams","method":"POST","name":"createOrganizationTeam","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":"The description of the team. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repoNames","type":"Array","info":"The full name (e.g., \"organization-name/repository-name\") of repositories to add the team to. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"privacy","type":"String","info":"The level of privacy this team should have. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"deleteHook"},"url":"/orgs/:org/hooks/:id","method":"DELETE","name":"deleteOrganizationHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"deleteTeam"},"url":"/teams/:id","method":"DELETE","name":"deleteOrganizationTeam","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"deleteTeamRepo"},"url":"/teams/:id/repos/:user/:repo","method":"DELETE","name":"deleteOrganizationTeamRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"editHook"},"url":"/orgs/:org/hooks/:id","method":"PATCH","name":"editOrganizationHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"config","type":"Json","info":"Key/value pairs to provide settings for this webhook (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"events","type":"Array","info":"Determines what events the hook is triggered for. Default: [\"push\"]. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"active","type":"Boolean","info":"Determines whether the hook is actually triggered on pushes. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"editTeam"},"url":"/teams/:id","method":"PATCH","name":"editOrganizationTeam","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":"The description of the team. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"privacy","type":"String","info":"The level of privacy this team should have. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"get"},"url":"/orgs/:org","method":"GET","name":"getOrganization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getAll"},"url":"/organizations","method":"GET","name":"getAllOrganizations","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"String","info":"The integer ID of the last Organization that you've seen. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getForUser"},"url":"/users/:user/orgs","method":"GET","name":"getUserOrganizations","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getHook"},"url":"/orgs/:org/hooks/:id","method":"GET","name":"getOrganizationHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getHooks"},"url":"/orgs/:org/hooks","method":"GET","name":"getOrganizationHooks","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getMembers"},"url":"/orgs/:org/members","method":"GET","name":"getOrganizationMembers","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"filter","type":"String","info":"Filter members returned in the list. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"role","type":"String","info":"Filter members returned by their role. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getOrganizationMembership"},"url":"/orgs/:org/memberships/:user","method":"GET","name":"getOrganizationMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getOrganizationMemberships"},"url":"/user/memberships/orgs","method":"GET","name":"getOrganizationMemberships","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":"Indicates the state of the memberships to return. Can be either active or pending. If not specified, both active and pending memberships are returned. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getPublicMembers"},"url":"/orgs/:org/public_members","method":"GET","name":"getOrganizationPublicMembers","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getTeam"},"url":"/teams/:id","method":"GET","name":"getOrganizationTeam","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getTeamMembers"},"url":"/teams/:id/members","method":"GET","name":"getOrganizationTeamMembers","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"role","type":"String","info":"Filters members returned by their role in the team. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getTeamMembership"},"url":"/teams/:id/memberships/:user","method":"GET","name":"getOrganizationTeamMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getTeamRepos"},"url":"/teams/:id/repos","method":"GET","name":"getOrganizationTeamRepositories","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"getTeams"},"url":"/orgs/:org/teams","method":"GET","name":"getOrganizationTeams","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"pingHook"},"url":"/orgs/:org/hooks/:id/pings","method":"POST","name":"pingOrganizationHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"publicizeMembership"},"url":"/orgs/:org/public_members/:user","method":"PUT","name":"publicizeOrganizationMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"removeMember"},"url":"/orgs/:org/members/:user","method":"DELETE","name":"removeOrganizationMember","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"removeOrganizationMembership"},"url":"/orgs/:org/memberships/:user","method":"DELETE","name":"removeOrganizationMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"removeTeamMembership"},"url":"/teams/:id/memberships/:user","method":"DELETE","name":"removeOrganizationTeamMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"orgs","name":"update"},"url":"/orgs/:org","method":"PATCH","name":"updateOrganization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"billingEmail","type":"String","info":"Billing email address. This address is not publicized. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"company","type":"String","info":"The company name. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"email","type":"String","info":"The publicly visible email address. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"location","type":"String","info":"The location. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":"The shorthand name of the company. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":"The description of the company. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"checkMerged"},"url":"/repos/:user/:repo/pulls/:number/merge","method":"GET","name":"checkMergedPullRequest","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"create"},"url":"/repos/:user/:repo/pulls","method":"POST","name":"createPullRequest","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"title","type":"String","info":"The title of the pull request. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"head","type":"String","info":"The branch (or git ref) where your changes are implemented. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"base","type":"String","info":"The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":"The contents of the pull request. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"createComment"},"url":"/repos/:user/:repo/pulls/:number/comments","method":"POST","name":"createPullRequestComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"commitId","type":"String","info":"Sha of the commit to comment on. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"path","type":"String","info":"Relative path of the file to comment on. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"position","type":"Number","info":"Column index in the diff to comment on. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"createCommentReply"},"url":"/repos/:user/:repo/pulls/:number/comments","method":"POST","name":"createPullRequestCommentReply","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"inReplyTo","type":"Number","info":"The comment id to reply to. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"createFromIssue"},"url":"/repos/:user/:repo/pulls","method":"POST","name":"createPullRequestFromIssue","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"issue","type":"Number","info":"The issue number in this repository to turn into a Pull Request. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"head","type":"String","info":"The branch (or git ref) where your changes are implemented. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"base","type":"String","info":"The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"deleteComment"},"url":"/repos/:user/:repo/pulls/comments/:number","method":"DELETE","name":"deletePullRequestComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"editComment"},"url":"/repos/:user/:repo/pulls/comments/:number","method":"PATCH","name":"editPullRequestComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"get"},"url":"/repos/:user/:repo/pulls/:number","method":"GET","name":"getPullRequest","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"getAll"},"url":"/repos/:user/:repo/pulls","method":"GET","name":"getAllPullRequests","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":"open, closed, or all (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"head","type":"String","info":"Filter pulls by head user and branch name in the format of user:ref-name. Example: github:new-script-format. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"base","type":"String","info":"Filter pulls by base branch name. Example: gh-pages. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":"Possible values are: `created`, `updated`, `popularity`, `long-running`, Default: `created` (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"direction","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"getComment"},"url":"/repos/:user/:repo/pulls/comments/:number","method":"GET","name":"getPullRequestComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"getComments"},"url":"/repos/:user/:repo/pulls/:number/comments","method":"GET","name":"getPullRequestComments","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"getCommentsForRepo"},"url":"/repos/:user/:repo/pulls/comments","method":"GET","name":"getPullRequestCommentsForRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":"Possible values are: `created`, `updated`, Default: `created` (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"direction","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"getCommits"},"url":"/repos/:user/:repo/pulls/:number/commits","method":"GET","name":"getPullRequestCommits","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"getFiles"},"url":"/repos/:user/:repo/pulls/:number/files","method":"GET","name":"getPullRequestFiles","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"merge"},"url":"/repos/:user/:repo/pulls/:number/merge","method":"PUT","name":"mergePullRequest","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"commitTitle","type":"String","info":"Title for the automatic commit message. (In preview period. See README.) (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"commitMessage","type":"String","info":"Extra detail to append to automatic commit message. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":"SHA that pull request head must match to allow merge (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"mergeMethod","type":"String","info":"Merge method to use. Possible values are `merge`, `squash`, or `rebase`. (In preview period. See README.) (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"pullRequests","name":"update"},"url":"/repos/:user/:repo/pulls/:number","method":"PATCH","name":"updatePullRequest","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"title","type":"String","info":"The title of the pull request. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":"The contents of the pull request. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":" (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"reactions","name":"createForCommitComment"},"url":"/repos/:user/:repo/comments/:id/reactions","method":"POST","name":"createReactionForCommitComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":"The reaction type. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"reactions","name":"createForIssue"},"url":"/repos/:user/:repo/issues/:number/reactions","method":"POST","name":"createReactionForIssue","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":"The reaction type. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"reactions","name":"createForIssueComment"},"url":"/repos/:user/:repo/issues/comments/:id/reactions","method":"POST","name":"createReactionForIssueComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":"The reaction type. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"reactions","name":"createForPullRequestReviewComment"},"url":"/repos/:user/:repo/pulls/comments/:id/reactions","method":"POST","name":"createReactionForPullRequestReviewComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":"The reaction type. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"reactions","name":"delete"},"url":"/reactions/:id","method":"DELETE","name":"deleteReaction","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"reactions","name":"getForCommitComment"},"url":"/repos/:user/:repo/comments/:id/reactions","method":"GET","name":"getReactionForCommitComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":"Indicates which type of reaction to return. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"reactions","name":"getForIssue"},"url":"/repos/:user/:repo/issues/:number/reactions","method":"GET","name":"getReactionForIssue","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":"Indicates which type of reaction to return. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"reactions","name":"getForIssueComment"},"url":"/repos/:user/:repo/issues/comments/:id/reactions","method":"GET","name":"getReactionForIssueComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":"Indicates which type of reaction to return. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"reactions","name":"getForPullRequestReviewComment"},"url":"/repos/:user/:repo/pulls/comments/:id/reactions","method":"GET","name":"getReactionForPullRequestReviewComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":"Indicates which type of reaction to return. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"addCollaborator"},"url":"/repos/:user/:repo/collaborators/:collabuser","method":"PUT","name":"addRepositoryCollaborator","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"collabuser","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"permission","type":"String","info":"`pull` - can pull, but not push to or administer this repository, `push` - can pull and push, but not administer this repository, `admin` - can pull, push and administer this repository. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"addProtectedBranchRequiredStatusChecksContexts"},"url":"/repos/:user/:repo/branches/:branch/protection/required_status_checks/contexts","method":"POST","name":"addProtectedBranchRequiredStatusChecksContexts","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Array","info":"An array of protected branch required status checks contexts (e.g. continuous-integration/jenkins). (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"addProtectedBranchTeamRestrictions"},"url":"/repos/:user/:repo/branches/:branch/protection/restrictions/teams","method":"POST","name":"addProtectedBranchTeamRestrictions","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Array","info":"An array of team slugs (e.g. justice-league). (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"addProtectedBranchUserRestrictions"},"url":"/repos/:user/:repo/branches/:branch/protection/restrictions/users","method":"POST","name":"addProtectedBranchUserRestrictions","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Array","info":"An array of team slugs (e.g. justice-league). (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"checkCollaborator"},"url":"/repos/:user/:repo/collaborators/:collabuser","method":"GET","name":"checkRepositoryCollaborator","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"collabuser","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"compareCommits"},"url":"/repos/:user/:repo/compare/:base...:head","method":"GET","name":"compareRepositoryCommits","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"base","type":"String","info":"The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"head","type":"String","info":"The branch (or git ref) where your changes are implemented. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"create"},"url":"/user/repos","method":"POST","name":"createRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"homepage","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"private","type":"Boolean","info":"True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"hasIssues","type":"Boolean","info":"True to enable issues for this repository, false to disable them. Default is true. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"hasWiki","type":"Boolean","info":"True to enable the wiki for this repository, false to disable it. Default is true. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"hasDownloads","type":"Boolean","info":"True to enable downloads for this repository, false to disable them. Default is true. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"autoInit","type":"Boolean","info":"True to create an initial commit with empty README. Default is false (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"gitignoreTemplate","type":"String","info":"Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"licenseTemplate","type":"String","info":"Desired LICENSE template to apply. Use the name of the template without the extension. For example, \"mit\" or \"mozilla\". (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"allowSquashMerge","type":"Boolean","info":"Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true. (In preview period. See README.) (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"allowMergeCommit","type":"Boolean","info":"Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true. (In preview period. See README.) (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"allowRebaseMerge","type":"Boolean","info":"Either true to allow rebase-merging pull requests, or false to prevent rebase-merging. Default: true. (In preview period. See README.) (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createCommitComment"},"url":"/repos/:user/:repo/commits/:sha/comments","method":"POST","name":"createRepositoryCommitComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"path","type":"String","info":"Relative path of the file to comment on. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"position","type":"Number","info":"Line index in the diff to comment on. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"line","type":"Number","info":"Deprecated. Use position parameter instead. Line number in the file to comment on. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createDeployment"},"url":"/repos/:user/:repo/deployments","method":"POST","name":"createRepositoryDeployment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ref","type":"String","info":"The ref to deploy. This can be a branch, tag, or sha. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"task","type":"String","info":"The named task to execute. e.g. deploy or deploy:migrations. Default: deploy (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"autoMerge","type":"Boolean","info":"Optional parameter to merge the default branch into the requested ref if it is behind the default branch. Default: true (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"requiredContexts","type":"Array","info":"Optional array of status contexts verified against commit status checks. If this parameter is omitted from the parameters then all unique contexts will be verified before a deployment is created. To bypass checking entirely pass an empty array. Defaults to all unique contexts. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"payload","type":"String","info":"Optional JSON payload with extra information about the deployment. Default: \"\" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"environment","type":"String","info":"The name of the environment that was deployed to. e.g. staging or production. Default: none. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":"Optional short description. Default: \"\" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"transientEnvironment","type":"Boolean","info":"Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: false. (In preview period. See README.) (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"productionEnvironment","type":"Boolean","info":"Specifies if the given environment is a one that end-users directly interact with. Default: true when environment is `production` and false otherwise. (In preview period. See README.) (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createDeploymentStatus"},"url":"/repos/:user/:repo/deployments/:id/statuses","method":"POST","name":"createRepositoryDeploymentStatus","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":"The state of the status. Can be one of pending, success, error, or failure. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"targetUrl","type":"String","info":"The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. Default: \"\" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"logUrl","type":"String","info":"Functionally equivalent to target_url. Default: \"\". (In preview period. See README.) (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":"A short description of the status. Default: \"\" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"environmentUrl","type":"String","info":"URL for accessing the deployment environment. Default: \"\". (In preview period. See README.) (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"autoInactive","type":"Boolean","info":"When true the new `inactive` status is added to all other non-transient, non-production environment deployments with the same repository and environment name as the created status's deployment. Default: true. (In preview period. See README.) (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createFile"},"url":"/repos/:user/:repo/contents/:path","method":"PUT","name":"createRepositoryFile","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"path","type":"String","info":"The content path. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"message","type":"String","info":"The commit message. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":"The new file content, Base64 encoded. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":"The branch name. If not provided, uses the repository’s default branch (usually master). (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"committer","type":"Json","info":" (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createForOrg"},"url":"/orgs/:org/repos","method":"POST","name":"createRepositoryForOrganization","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"homepage","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"private","type":"Boolean","info":"True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"hasIssues","type":"Boolean","info":"True to enable issues for this repository, false to disable them. Default is true. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"hasWiki","type":"Boolean","info":"True to enable the wiki for this repository, false to disable it. Default is true. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"hasDownloads","type":"Boolean","info":"True to enable downloads for this repository, false to disable them. Default is true. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"teamId","type":"Number","info":"The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"autoInit","type":"Boolean","info":"True to create an initial commit with empty README. Default is false (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"gitignoreTemplate","type":"String","info":"Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"licenseTemplate","type":"String","info":"Desired LICENSE template to apply. Use the name of the template without the extension. For example, \"mit\" or \"mozilla\". (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"allowSquashMerge","type":"Boolean","info":"Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true. (In preview period. See README.) (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"allowMergeCommit","type":"Boolean","info":"Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true. (In preview period. See README.) (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"allowRebaseMerge","type":"Boolean","info":"Either true to allow rebase-merging pull requests, or false to prevent rebase-merging. Default: true. (In preview period. See README.) (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createHook"},"url":"/repos/:user/:repo/hooks","method":"POST","name":"createRepositoryHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"config","type":"Json","info":"A Hash containing key/value pairs to provide settings for this hook. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"events","type":"Array","info":"Determines what events the hook is triggered for. Default: `['push']`. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"active","type":"Boolean","info":"Determines whether the hook is actually triggered on pushes. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createKey"},"url":"/repos/:user/:repo/keys","method":"POST","name":"createRepositoryKey","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"title","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"key","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"readOnly","type":"Boolean","info":"If true, the key will only be able to read repository contents. Otherwise, the key will be able to read and write. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createProject"},"url":"/repos/:user/:repo/projects","method":"POST","name":"createRepositoryProject","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createProjectCard"},"url":"/repos/:user/:repo/projects/columns/:id/cards","method":"POST","name":"createRepositoryProjectCard","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"note","type":"String","info":"The note of the card. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"contentId","type":"String","info":"The id of the Issue or Pull Request to associate with this card. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"contentType","type":"String","info":"The type of content to associate with this card. Can be either 'Issue' or 'PullRequest'. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createProjectColumn"},"url":"/repos/:user/:repo/projects/:number/columns","method":"POST","name":"createRepositoryProjectColumn","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createRelease"},"url":"/repos/:user/:repo/releases","method":"POST","name":"createRepositoryRelease","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"tagName","type":"String","info":"String of the tag (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"targetCommitish","type":"String","info":"Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master). (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"draft","type":"Boolean","info":"true to create a draft (unpublished) release, false to create a published one. Default: false (optional)"},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"prerelease","type":"Boolean","info":"true to identify the release as a prerelease. false to identify the release as a full release. Default: false (optional)"}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"createStatus"},"url":"/repos/:user/:repo/statuses/:sha","method":"POST","name":"createRepositoryStatus","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":"State of the status - can be one of pending, success, error, or failure. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"targetUrl","type":"String","info":"Target url to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the ‘source’ of the Status. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":"Short description of the status. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"context","type":"String","info":"A string label to differentiate this status from the status of other systems. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"delete"},"url":"/repos/:user/:repo","method":"DELETE","name":"deleteRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteAsset"},"url":"/repos/:user/:repo/releases/assets/:id","method":"DELETE","name":"deleteRepositoryAsset","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteCommitComment"},"url":"/repos/:user/:repo/comments/:id","method":"DELETE","name":"deleteRepositoryCommitComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteDownload"},"url":"/repos/:user/:repo/downloads/:id","method":"DELETE","name":"deleteRepositoryDownload","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteFile"},"url":"/repos/:user/:repo/contents/:path","method":"DELETE","name":"deleteRepositoryFile","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"path","type":"String","info":"The content path. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"message","type":"String","info":"The commit message. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":"The blob SHA of the file being removed. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":"The branch name. If not provided, uses the repository’s default branch (usually master). (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"committer","type":"Json","info":" (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteHook"},"url":"/repos/:user/:repo/hooks/:id","method":"DELETE","name":"deleteRepositoryHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteInvite"},"url":"/repositories/:repo/invitations/:id","method":"DELETE","name":"deleteRepositoryInvite","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteKey"},"url":"/repos/:user/:repo/keys/:id","method":"DELETE","name":"deleteRepositoryKey","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteProject"},"url":"/repos/:user/:repo/projects/:number","method":"DELETE","name":"deleteRepositoryProject","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteProjectCard"},"url":"/repos/:user/:repo/projects/columns/cards/:id","method":"DELETE","name":"deleteRepositoryProjectCard","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteProjectColumn"},"url":"/repos/:user/:repo/projects/columns/:id","method":"DELETE","name":"deleteRepositoryProjectColumn","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"deleteRelease"},"url":"/repos/:user/:repo/releases/:id","method":"DELETE","name":"deleteRepositoryRelease","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"edit"},"url":"/repos/:user/:repo","method":"PATCH","name":"editRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"description","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"homepage","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"private","type":"Boolean","info":"True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"hasIssues","type":"Boolean","info":"True to enable issues for this repository, false to disable them. Default is true. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"hasWiki","type":"Boolean","info":"True to enable the wiki for this repository, false to disable it. Default is true. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"hasDownloads","type":"Boolean","info":"True to enable downloads for this repository, false to disable them. Default is true. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"defaultBranch","type":"String","info":"Updates the default branch for this repository. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"allowSquashMerge","type":"Boolean","info":"Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true. (In preview period. See README.) (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"allowMergeCommit","type":"Boolean","info":"Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true. (In preview period. See README.) (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"allowRebaseMerge","type":"Boolean","info":"Either true to allow rebase-merging pull requests, or false to prevent rebase-merging. Default: true. (In preview period. See README.) (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"editAsset"},"url":"/repos/:user/:repo/releases/assets/:id","method":"PATCH","name":"editRepositoryAsset","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"label","type":"String","info":"An alternate short description of the asset. Used in place of the filename. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"editHook"},"url":"/repos/:user/:repo/hooks/:id","method":"PATCH","name":"editRepositoryHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"config","type":"Json","info":"A Hash containing key/value pairs to provide settings for this hook. Modifying this will replace the entire config object. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"events","type":"Array","info":"Determines what events the hook is triggered for. This replaces the entire array of events. Default: `['push']`. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"addEvents","type":"Array","info":"Determines a list of events to be added to the list of events that the Hook triggers for. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"removeEvents","type":"Array","info":"Determines a list of events to be removed from the list of events that the Hook triggers for. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"active","type":"Boolean","info":"Determines whether the hook is actually triggered on pushes. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"editRelease"},"url":"/repos/:user/:repo/releases/:id","method":"PATCH","name":"editRepositoryRelease","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"tagName","type":"String","info":"String of the tag (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"targetCommitish","type":"String","info":"Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master). (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"draft","type":"Boolean","info":"true to create a draft (unpublished) release, false to create a published one. Default: false (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"prerelease","type":"Boolean","info":"true to identify the release as a prerelease. false to identify the release as a full release. Default: false (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"fork"},"url":"/repos/:user/:repo/forks","method":"POST","name":"forkRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"organization","type":"String","info":"Optional parameter to specify the organization name if forking into an organization. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"get"},"url":"/repos/:user/:repo","method":"GET","name":"getRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getAll"},"url":"/user/repos","method":"GET","name":"getAllRepositories","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"visibility","type":"String","info":"Can be one of `all`, `public`, or `private`. Default: `all`. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"affiliation","type":"String","info":"Comma-separated list of values. Can include: `owner`, `collaborator`, `organization_member`. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"type","type":"String","info":"Possible values: `all`, `owner`, `public`, `private`, `member`. Default: `all`. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":"Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"direction","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getAllCommitComments"},"url":"/repos/:user/:repo/comments","method":"GET","name":"getRepositoryAllCommitComments","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getArchiveLink"},"url":"/repos/:user/:repo/:archive_format/:ref","method":"GET","name":"getRepositoryArchiveLink","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"archiveFormat","type":"String","info":"Either tarball or zipball, Deafult: tarball. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ref","type":"String","info":"String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getAsset"},"url":"/repos/:user/:repo/releases/assets/:id","method":"GET","name":"getRepositoryAsset","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getBranch"},"url":"/repos/:user/:repo/branches/:branch","method":"GET","name":"getRepositoryBranch","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getBranchProtection"},"url":"/repos/:user/:repo/branches/:branch/protection","method":"GET","name":"getRepositoryBranchProtection","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getBranches"},"url":"/repos/:user/:repo/branches","method":"GET","name":"getRepositoryBranches","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"protected","type":"Boolean","info":"Set to true to only return protected branches (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getById"},"url":"/repositories/:id","method":"GET","name":"getRepositoryById","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getClones"},"url":"/repos/:user/:repo/traffic/clones","method":"GET","name":"getRepositoryClones","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getCollaborators"},"url":"/repos/:user/:repo/collaborators","method":"GET","name":"getRepositoryCollaborators","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getCombinedStatus"},"url":"/repos/:user/:repo/commits/:sha/status","method":"GET","name":"getRepositoryCombinedStatus","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getCommit"},"url":"/repos/:user/:repo/commits/:sha","method":"GET","name":"getRepositoryCommit","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getCommitComment"},"url":"/repos/:user/:repo/comments/:id","method":"GET","name":"getRepositoryCommitComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getCommitComments"},"url":"/repos/:user/:repo/commits/:sha/comments","method":"GET","name":"getRepositoryCommitComments","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getCommits"},"url":"/repos/:user/:repo/commits","method":"GET","name":"getRepositoryCommits","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":"Sha or branch to start listing commits from. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"path","type":"String","info":"Only commits containing this file path will be returned. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"author","type":"String","info":"GitHub login or email address by which to filter by commit author. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"until","type":"Date","info":"Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getContent"},"url":"/repos/:user/:repo/contents/:path","method":"GET","name":"getRepositoryContent","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"path","type":"String","info":"The content path. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ref","type":"String","info":"The String name of the Commit/Branch/Tag. Defaults to master. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getContributors"},"url":"/repos/:user/:repo/contributors","method":"GET","name":"getRepositoryContributors","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"anon","type":"Boolean","info":"Set to 1 or true to include anonymous contributors in results. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getDeploymentStatuses"},"url":"/repos/:user/:repo/deployments/:id/statuses","method":"GET","name":"getRepositoryDeploymentStatuses","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getDeployments"},"url":"/repos/:user/:repo/deployments","method":"GET","name":"getRepositoryDeployments","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":"The short or long sha that was recorded at creation time. Default: none. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ref","type":"String","info":"The name of the ref. This can be a branch, tag, or sha. Default: none. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"task","type":"String","info":"The name of the task for the deployment. e.g. deploy or deploy:migrations. Default: none. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"environment","type":"String","info":"The name of the environment that was deployed to. e.g. staging or production. Default: none. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getDownload"},"url":"/repos/:user/:repo/downloads/:id","method":"GET","name":"getRepositoryDownload","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getDownloads"},"url":"/repos/:user/:repo/downloads","method":"GET","name":"getRepositoryDownloads","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getForOrg"},"url":"/orgs/:org/repos","method":"GET","name":"getOrganizationRepositories","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"type","type":"String","info":"Possible values: `all`, `public`, `private`, `forks`, `sources`, `member`. Default: `all`. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getForUser"},"url":"/users/:user/repos","method":"GET","name":"getUserRepositories","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"type","type":"String","info":"Possible values: `all`, `owner`, `member`. Default: `owner`. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":"Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"direction","type":"String","info":" (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getForks"},"url":"/repos/:user/:repo/forks","method":"GET","name":"getRepositoryForks","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":"Possible values: `newest`, `oldest`, `stargazers`, default: `newest`. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getHook"},"url":"/repos/:user/:repo/hooks/:id","method":"GET","name":"getRepositoryHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getHooks"},"url":"/repos/:user/:repo/hooks","method":"GET","name":"getRepositoryHooks","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getInvites"},"url":"/repositories/:repo/invitations","method":"GET","name":"getRepositoryInvites","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getKey"},"url":"/repos/:user/:repo/keys/:id","method":"GET","name":"getRepositoryKey","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getKeys"},"url":"/repos/:user/:repo/keys","method":"GET","name":"getRepositoryKeys","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getLanguages"},"url":"/repos/:user/:repo/languages","method":"GET","name":"getRepositoryLanguages","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getLatestPagesBuild"},"url":"/repos/:user/:repo/pages/builds/latest","method":"GET","name":"getRepositoryLatestPagesBuild","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getLatestRelease"},"url":"/repos/:user/:repo/releases/latest","method":"GET","name":"getRepositoryLatestRelease","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getPages"},"url":"/repos/:user/:repo/pages","method":"GET","name":"getRepositoryPages","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getPagesBuild"},"url":"/repos/:user/:repo/pages/builds/:id","method":"GET","name":"getRepositoryPagesBuild","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getPagesBuilds"},"url":"/repos/:user/:repo/pages/builds","method":"GET","name":"getRepositoryPagesBuilds","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getPaths"},"url":"/repos/:user/:repo/traffic/popular/paths","method":"GET","name":"getRepositoryPaths","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProject"},"url":"/repos/:user/:repo/projects/:number","method":"GET","name":"getRepositoryProject","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProjectCard"},"url":"/repos/:user/:repo/projects/columns/cards/:id","method":"GET","name":"getRepositoryProjectCard","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProjectCards"},"url":"/repos/:user/:repo/projects/columns/:id/cards","method":"GET","name":"getRepositoryProjectCards","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProjectColumn"},"url":"/repos/:user/:repo/projects/columns/:id","method":"GET","name":"getRepositoryProjectColumn","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProjectColumns"},"url":"/repos/:user/:repo/projects/:number/columns","method":"GET","name":"getRepositoryProjectColumns","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProjects"},"url":"/repos/:user/:repo/projects","method":"GET","name":"getRepositoryProjects","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProtectedBranchRequiredStatusChecks"},"url":"/repos/:user/:repo/branches/:branch/protection/required_status_checks","method":"GET","name":"getProtectedBranchRequiredStatusChecks","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProtectedBranchRequiredStatusChecksContexts"},"url":"/repos/:user/:repo/branches/:branch/protection/required_status_checks/contexts","method":"GET","name":"getProtectedBranchRequiredStatusChecksContexts","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProtectedBranchRestrictions"},"url":"/repos/:user/:repo/branches/:branch/protection/restrictions","method":"GET","name":"getProtectedBranchRestrictions","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProtectedBranchTeamRestrictions"},"url":"/repos/:user/:repo/branches/:branch/protection/restrictions/teams","method":"GET","name":"getProtectedBranchTeamRestrictions","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getProtectedBranchUserRestrictions"},"url":"/repos/:user/:repo/branches/:branch/protection/restrictions/users","method":"GET","name":"getProtectedBranchUserRestrictions","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getPublic"},"url":"/repositories","method":"GET","name":"getPublicRepositories","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"String","info":"The integer ID of the last Repository that you've seen. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getReadme"},"url":"/repos/:user/:repo/readme","method":"GET","name":"getRepositoryReadme","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ref","type":"String","info":"The name of the commit/branch/tag. Default: the repository’s default branch (usually master) (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getReferrers"},"url":"/repos/:user/:repo/traffic/popular/referrers","method":"GET","name":"getRepositoryReferrers","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getRelease"},"url":"/repos/:user/:repo/releases/:id","method":"GET","name":"getRepositoryRelease","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getReleaseByTag"},"url":"/repos/:user/:repo/releases/tags/:tag","method":"GET","name":"getRepositoryReleaseByTag","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"tag","type":"String","info":"String of the tag (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getReleases"},"url":"/repos/:user/:repo/releases","method":"GET","name":"getRepositoryReleases","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getShaOfCommitRef"},"url":"/repos/:user/:repo/commits/:ref","method":"GET","name":"getRepositoryShaOfCommitRef","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"ref","type":"String","info":"String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getStatsCodeFrequency"},"url":"/repos/:user/:repo/stats/code_frequency","method":"GET","name":"getRepositoryStatsCodeFrequency","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getStatsCommitActivity"},"url":"/repos/:user/:repo/stats/commit_activity","method":"GET","name":"getRepositoryStatsCommitActivity","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getStatsContributors"},"url":"/repos/:user/:repo/stats/contributors","method":"GET","name":"getRepositoryStatsContributors","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getStatsParticipation"},"url":"/repos/:user/:repo/stats/participation","method":"GET","name":"getRepositoryStatsParticipation","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getStatsPunchCard"},"url":"/repos/:user/:repo/stats/punch_card","method":"GET","name":"getRepositoryStatsPunchCard","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getStatuses"},"url":"/repos/:user/:repo/commits/:sha/statuses","method":"GET","name":"getRepositoryStatuses","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getTags"},"url":"/repos/:user/:repo/tags","method":"GET","name":"getRepositoryTags","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getTeams"},"url":"/repos/:user/:repo/teams","method":"GET","name":"getRepositoryTeams","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"getViews"},"url":"/repos/:user/:repo/traffic/views","method":"GET","name":"getRepositoryViews","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"listAssets"},"url":"/repos/:user/:repo/releases/:id/assets","method":"GET","name":"getRepositoryAssets","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"merge"},"url":"/repos/:user/:repo/merges","method":"POST","name":"mergeRepository","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"base","type":"String","info":"The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"head","type":"String","info":"The branch (or git ref) where your changes are implemented. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"commitMessage","type":"String","info":"Commit message to use for the merge commit. If omitted, a default message will be used. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"moveProjectCard"},"url":"/repos/:user/:repo/projects/columns/cards/:id/moves","method":"POST","name":"moveRepositoryProjectCard","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"position","type":"String","info":"Can be one of first, last, or after:<column-id>, where <column-id> is the id value of a column in the same project. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"columnId","type":"String","info":"The id value of a column in the same project. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"moveProjectColumn"},"url":"/repos/:user/:repo/projects/columns/:id/moves","method":"POST","name":"moveRepositoryProjectColumn","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"position","type":"String","info":"Can be one of first, last, or after:<column-id>, where <column-id> is the id value of a column in the same project. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"one"},"url":"/repositories/:id","method":"GET","name":"pingRepositoryHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"pingHook"},"url":"/repos/:user/:repo/hooks/:id/pings","method":"POST","name":"pingRepositoryHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"removeBranchProtection"},"url":"/repos/:user/:repo/branches/:branch/protection","method":"DELETE","name":"removeBranchProtection","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"removeCollaborator"},"url":"/repos/:user/:repo/collaborators/:collabuser","method":"DELETE","name":"removeRepositoryCollaborator","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"collabuser","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"removeProtectedBranchRequiredStatusChecks"},"url":"/repos/:user/:repo/branches/:branch/protection/required_status_checks","method":"DELETE","name":"removeProtectedBranchRequiredStatusChecks","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"removeProtectedBranchRequiredStatusChecksContexts"},"url":"/repos/:user/:repo/branches/:branch/protection/required_status_checks/contexts","method":"DELETE","name":"removeProtectedBranchRequiredStatusChecksContexts","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"removeProtectedBranchRestrictions"},"url":"/repos/:user/:repo/branches/:branch/protection/restrictions","method":"DELETE","name":"removeProtectedBranchRestrictions","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"removeProtectedBranchTeamRestrictions"},"url":"/repos/:user/:repo/branches/:branch/protection/restrictions/teams","method":"DELETE","name":"removeProtectedBranchTeamRestrictions","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"removeProtectedBranchUserRestrictions"},"url":"/repos/:user/:repo/branches/:branch/protection/restrictions/users","method":"DELETE","name":"removeProtectedBranchUserRestrictions","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"replaceProtectedBranchRequiredStatusChecksContexts"},"url":"/repos/:user/:repo/branches/:branch/protection/required_status_checks/contexts","method":"PUT","name":"replaceProtectedBranchRequiredStatusChecksContexts","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Array","info":"An array of protected branch required status checks contexts (e.g. continuous-integration/jenkins). (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"replaceProtectedBranchTeamRestrictions"},"url":"/repos/:user/:repo/branches/:branch/protection/restrictions/teams","method":"PUT","name":"replaceProtectedBranchTeamRestrictions","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Array","info":"An array of team slugs (e.g. justice-league). (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"replaceProtectedBranchUserRestrictions"},"url":"/repos/:user/:repo/branches/:branch/protection/restrictions/users","method":"PUT","name":"replaceProtectedBranchUserRestrictions","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Array","info":"An array of team slugs (e.g. justice-league). (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"requestPageBuild"},"url":"/repos/:user/:repo/pages/builds","method":"POST","name":"requestRepositoryPageBuild","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"testHook"},"url":"/repos/:user/:repo/hooks/:id/test","method":"POST","name":"testRepositoryHook","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"updateBranchProtection"},"url":"/repos/:user/:repo/branches/:branch/protection","method":"PUT","name":"updateRepositoryBranchProtection","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"requiredStatusChecks","type":"Json","info":"JSON object that contains the following keys: `include_admins` - Enforce required status checks for repository administrators, `strict` - Require branches to be up to date before merging, `contexts` - The list of status checks to require in order to merge into this branch. This object can have the value of `null` for disabled. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"restrictions","type":"Json","info":"JSON object that contains the following keys: `users` - The list of user logins with push access, `teams` - The list of team slugs with push access. This object can have the value of `null` for disabled. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"updateCommitComment"},"url":"/repos/:user/:repo/comments/:id","method":"PATCH","name":"updateRepositoryCommitComment","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"updateFile"},"url":"/repos/:user/:repo/contents/:path","method":"PUT","name":"updateRepositoryFile","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"path","type":"String","info":"The content path. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"message","type":"String","info":"The commit message. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"content","type":"String","info":"The updated file content, Base64 encoded. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sha","type":"String","info":"The blob SHA of the file being replaced. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":"The branch name. If not provided, uses the repository’s default branch (usually master). (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"committer","type":"Json","info":" (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"updateInvite"},"url":"/repositories/:repo/invitations/:id","method":"PATCH","name":"updateRepositoryInvite","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"permission","type":"String","info":"The permissions that the associated user will have on the repository. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"updateProject"},"url":"/repos/:user/:repo/projects/:number","method":"PATCH","name":"updateRepositoryProject","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"number","type":"Number","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"updateProjectCard"},"url":"/repos/:user/:repo/projects/columns/cards/:id","method":"PATCH","name":"updateRepositoryProjectCard","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"note","type":"String","info":"The note of the card. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"updateProjectColumn"},"url":"/repos/:user/:repo/projects/columns/:id","method":"PATCH","name":"updateRepositoryProjectColumn","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"updateProtectedBranchRequiredStatusChecks"},"url":"/repos/:user/:repo/branches/:branch/protection/required_status_checks","method":"PATCH","name":"updateProtectedBranchRequiredStatusChecks","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"branch","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Json","info":"JSON object that contains the following keys: `include_admins` - Enforce required status checks for repository administrators, `strict` - Require branches to be up to date before merging, `contexts` - The list of status checks to require in order to merge into this branch. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"repos","name":"uploadAsset"},"url":"/repos/:user/:repo/releases/:id/assets","method":"POST","name":"uploadRepositoryAsset","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"repo","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"filepath","type":"String","info":"The file path of the asset. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":"The file name of the asset. This should be set in a URI query parameter. (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"label","type":"String","info":"An alternate short description of the asset. Used in place of the filename. This should be set in a URI query parameter. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"search","name":"code"},"url":"/search/code","method":"GET","name":"codeSearch","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"q","type":"String","info":"Search Term (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":"The sort field. Can only be indexed, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"order","type":"String","info":"asc or desc (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"search","name":"email"},"url":"/legacy/user/email/:email","method":"GET","name":"emailSearch","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"email","type":"String","info":"The email address (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"search","name":"issues"},"url":"/search/issues","method":"GET","name":"issuesSearch","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"q","type":"String","info":"Search Term (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":"The sort field. Can be comments, created, or updated. Default: results are sorted by best match. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"order","type":"String","info":"asc or desc (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"search","name":"repos"},"url":"/search/repositories","method":"GET","name":"repositorySearch","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"q","type":"String","info":"Search Term (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":"stars, forks, or updated (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"order","type":"String","info":"asc or desc (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"search","name":"users"},"url":"/search/users","method":"GET","name":"usersSearch","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"q","type":"String","info":"Search Term (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"sort","type":"String","info":"The sort field. Can be followers, repositories, or joined. Default: results are sorted by best match. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"order","type":"String","info":"asc or desc (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"acceptRepoInvite"},"url":"/user/repository_invitations/:id","method":"PATCH","name":"acceptRepositoryInvite","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"addEmails"},"url":"/user/emails","method":"POST","name":"addEmails","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Array","info":"You can post a single email address or an array of addresses. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"checkFollowing"},"url":"/user/following/:user","method":"GET","name":"checkFollowing","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"checkIfOneFollowersOther"},"url":"/users/:user/following/:other_user","method":"GET","name":"checkIfOneFollowersOther","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"otherUser","type":"String","info":"Other user (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"createGpgKey"},"url":"/user/gpg_keys","method":"POST","name":"createGpgKey","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"armoredPublicKey","type":"String","info":"GPG key contents (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"createKey"},"url":"/user/keys","method":"POST","name":"createKey","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"title","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"key","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"declineRepoInvite"},"url":"/user/repository_invitations/:id","method":"DELETE","name":"declineRepositoryInvite","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"deleteEmails"},"url":"/user/emails","method":"DELETE","name":"deleteEmails","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"body","type":"Array","info":"You can post a single email address or an array of addresses. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"deleteGpgKey"},"url":"/user/gpg_keys/:id","method":"DELETE","name":"deleteGpgKey","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"deleteKey"},"url":"/user/keys/:id","method":"DELETE","name":"deleteKey","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"demote"},"url":"/users/:user/site_admin","method":"DELETE","name":"demoteUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"editOrganizationMembership"},"url":"/user/memberships/orgs/:org","method":"PATCH","name":"editOrganizationMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"state","type":"String","info":"The state that the membership should be in. Only \"active\" will be accepted. (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"followUser"},"url":"/user/following/:user","method":"PUT","name":"followUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"get"},"url":"/user","method":"GET","name":"getUser","callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getAll"},"url":"/users","method":"GET","name":"getAllUsers","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"since","type":"Number","info":"The integer ID of the last User that you’ve seen. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getById"},"url":"/user/:id","method":"GET","name":"getUserById","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getEmails"},"url":"/user/emails","method":"GET","name":"getUserEmails","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getFollowers"},"url":"/users/followers","method":"GET","name":"getUserFollowers","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getFollowersForUser"},"url":"/users/:user/followers","method":"GET","name":"getFollowersForUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getFollowing"},"url":"/user/following","method":"GET","name":"getUserFollowing","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getFollowingForUser"},"url":"/users/:user/following","method":"GET","name":"getFollowingForUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getForUser"},"url":"/users/:user","method":"GET","name":"getSingleUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getGpgKey"},"url":"/user/gpg_keys/:id","method":"GET","name":"getGpgKey","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getGpgKeys"},"url":"/user/gpg_keys","method":"GET","name":"getGpgKeys","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getKey"},"url":"/user/keys/:id","method":"GET","name":"getKey","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"id","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getKeys"},"url":"/user/keys","method":"GET","name":"getKeys","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getKeysForUser"},"url":"/users/:user/keys","method":"GET","name":"getKeysForUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getOrganizationMembership"},"url":"/user/memberships/orgs/:org","method":"GET","name":"getUserOrganizationMembership","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"org","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getOrgs"},"url":"/user/orgs","method":"GET","name":"getUserOrganizations","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getRepoInvites"},"url":"/user/repository_invitations","method":"GET","name":"getRepositoryInvites","callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"getTeams"},"url":"/user/teams","method":"GET","name":"getUserTeams","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"page","type":"Number","info":"Page number of the results to fetch. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"perPage","type":"Number","info":"A custom page size up to 100. Default is 30. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"promote"},"url":"/users/:user/site_admin","method":"PUT","name":"promoteUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"suspend"},"url":"/users/:user/suspended","method":"PUT","name":"suspendUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"unfollowUser"},"url":"/user/following/:user","method":"DELETE","name":"unfollowUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"unsuspend"},"url":"/users/:user/suspended","method":"DELETE","name":"unsuspendUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"user","type":"String","info":" (required)","req":true}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]},{"github":{"section":"users","name":"update"},"url":"/user","method":"PATCH","name":"updateUser","args":[{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"name","type":"String","info":"The new name of the user (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"email","type":"String","info":"Publicly visible email address. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"blog","type":"String","info":"The new blog URL of the user. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"company","type":"String","info":"The new company of the user. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"location","type":"String","info":"The new location of the user. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"hireable","type":"Boolean","info":"The new hiring availability of the user. (optional)","req":false},{"name":"accessToken","type":"credentials","info":"The access_token obtained from Github. (optional)"},{"name":"bio","type":"String","info":"The new short biography of the user. (optional)","req":false}],"callbacks":[{"name":"error","info":"Error"},{"name":"success","info":"Success"}]}],"accounts":{"domain":"github.com","credentials":["accessToken"]}}